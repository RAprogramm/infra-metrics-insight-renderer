name: Render metrics for selected targets

on:
  schedule:
    - cron: "19 3 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build_cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache metrics-orchestrator build
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "metrics-orchestrator -> target"

      - name: Build metrics-orchestrator CLI
        run: cargo build --release --locked --manifest-path metrics-orchestrator/Cargo.toml

      - name: Upload orchestrator binary
        uses: actions/upload-artifact@v4
        with:
          name: metrics-orchestrator
          path: metrics-orchestrator/target/release/metrics-orchestrator
          if-no-files-found: error

  prepare:
    needs: build_cli
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download orchestrator binary
        uses: actions/download-artifact@v4
        with:
          name: metrics-orchestrator
          path: dist

      - name: Generate render targets
        id: generate
        run: |
          set -euo pipefail
          ORCHESTRATOR="dist/metrics-orchestrator"
          chmod +x "${ORCHESTRATOR}"
          MATRIX="$(${ORCHESTRATOR} --config targets/targets.yaml)"
          printf 'matrix=%s\n' "${MATRIX}" >> "${GITHUB_OUTPUT}"

  render:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.matrix).targets }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Render profile target
        if: ${{ matrix.target.kind == 'profile' }}
        uses: ./.github/actions/render-profile
        with:
          classic_token: ${{ secrets.CLASSIC }}
          target_user: ${{ matrix.target.owner }}
          branch_name: ${{ matrix.target.branch_name }}
          target_path: ${{ matrix.target.target_path }}
          temp_artifact: ${{ matrix.target.temp_artifact }}
          time_zone: ${{ matrix.target.time_zone }}
          display_name: ${{ matrix.target.display_name }}

      - name: Render repository target
        if: ${{ matrix.target.kind != 'profile' }}
        uses: ./.github/actions/render-repository
        with:
          classic_token: ${{ secrets.CLASSIC }}
          target_owner: ${{ matrix.target.owner }}
          target_repo: ${{ matrix.target.repository }}
          branch_name: ${{ matrix.target.branch_name }}
          target_path: ${{ matrix.target.target_path }}
          temp_artifact: ${{ matrix.target.temp_artifact }}
          time_zone: ${{ matrix.target.time_zone }}
