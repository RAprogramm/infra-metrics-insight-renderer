name: Render metrics for selected targets

on:
  schedule:
    - cron: "19 3 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup IMIR
        uses: ./.github/actions/setup-imir

      - name: Generate render targets
        id: generate
        run: |
          set -euo pipefail
          MATRIX="$(imir --config targets/targets.yaml)"
          printf 'matrix=%s\n' "${MATRIX}" >> "${GITHUB_OUTPUT}"

  render:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.matrix).targets }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Render profile target
        if: ${{ matrix.target.kind == 'profile' }}
        uses: ./.github/actions/render-profile
        with:
          classic_token: ${{ secrets.CLASSIC }}
          target_user: ${{ matrix.target.owner }}
          branch_name: ${{ matrix.target.branch_name }}
          target_path: ${{ matrix.target.target_path }}
          temp_artifact: ${{ matrix.target.temp_artifact }}
          time_zone: ${{ matrix.target.time_zone }}
          display_name: ${{ matrix.target.display_name }}

      - name: Render repository target
        if: ${{ matrix.target.kind != 'profile' }}
        uses: ./.github/actions/render-repository
        with:
          classic_token: ${{ secrets.CLASSIC }}
          target_owner: ${{ matrix.target.owner }}
          target_repo: ${{ matrix.target.repository }}
          branch_name: ${{ matrix.target.branch_name }}
          contributors_branch: ${{ matrix.target.contributors_branch }}
          target_path: ${{ matrix.target.target_path }}
          temp_artifact: ${{ matrix.target.temp_artifact }}
          time_zone: ${{ matrix.target.time_zone }}
