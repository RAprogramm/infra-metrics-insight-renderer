# SPDX-FileCopyrightText: 2025 RAprogramm <andrey.rozanov.vl@gmail.com>
#
# SPDX-License-Identifier: MIT

name: Render repository metrics

on:
  workflow_dispatch:
    inputs:
      target_owner:
        description: "GitHub account owning the repository."
        required: false
        default: RAprogramm
      target_repo:
        description: "Repository name to render metrics for."
        required: true
      target_path:
        description: "Destination path for the generated metrics artifact."
        required: false
      temp_artifact:
        description: "Intermediate artifact filename produced by metrics renderer."
        required: false
      contributors_branch:
        description: "Repository branch analyzed by contributors plugin."
        required: false
  workflow_call:
    inputs:
      contributors_branch:
        description: "Repository branch analyzed by contributors plugin."
        required: false
        type: string
      target_owner:
        description: "GitHub account owning the repository."
        required: false
        type: string
        default: RAprogramm
      target_repo:
        description: "Repository name to render metrics for."
        required: true
        type: string
      target_path:
        description: "Destination path for the generated metrics artifact."
        required: false
        type: string
      temp_artifact:
        description: "Intermediate artifact filename produced by metrics renderer."
        required: false
        type: string
    secrets:
      CLASSIC:
        required: true

permissions:
  contents: write

jobs:
  render:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Render metrics
        uses: ./.github/actions/render-repository
        with:
          classic_token: ${{ secrets.CLASSIC }}
          target_owner: ${{ inputs.target_owner || github.repository_owner }}
          target_repo: ${{ inputs.target_repo }}
          contributors_branch: ${{ inputs.contributors_branch }}
          target_path: ${{ inputs.target_path || format('metrics/{0}.svg', inputs.target_repo) }}
          temp_artifact: ${{ inputs.temp_artifact || format('.metrics-tmp/{0}.svg', inputs.target_repo) }}

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v5
        with:
          name: metrics-${{ inputs.target_repo }}
          path: ${{ inputs.target_path || format('metrics/{0}.svg', inputs.target_repo) }}
          retention-days: 1

  commit:
    needs: render
    if: always() && needs.render.result != 'cancelled' && needs.render.result != 'skipped'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download metrics artifact
        uses: actions/download-artifact@v6
        with:
          name: metrics-${{ inputs.target_repo }}
          path: .

      - name: Commit and push metrics
        run: |
          set -euo pipefail

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config pull.rebase true

          TARGET_PATH="${{ inputs.target_path || format('metrics/{0}.svg', inputs.target_repo) }}"
          git add "${TARGET_PATH}"

          if git diff --cached --quiet; then
            echo "No metrics changes to commit."
            exit 0
          fi

          git commit -m "chore(metrics): update ${{ inputs.target_repo }} [Skip GitHub Action]"

          for i in {1..3}; do
            git pull origin main --rebase && git push origin HEAD:main && break || sleep 5
          done
