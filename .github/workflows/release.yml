name: Release IMIR binaries

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
            extension: ""
          - os: macos-14
            target: aarch64-apple-darwin
            archive: tar.gz
            extension: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
            extension: .exe
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --locked --manifest-path imir/Cargo.toml --target ${{ matrix.target }}

      - name: Package binary (tar.gz)
        if: ${{ matrix.archive == 'tar.gz' }}
        run: |
          set -euo pipefail
          BIN="imir/target/${{ matrix.target }}/release/imir${{ matrix.extension }}"
          chmod +x "${BIN}"
          tar -C "$(dirname "${BIN}")" -czf "imir-${{ matrix.target }}.${{ matrix.archive }}" "$(basename "${BIN}")"

      - name: Package binary (zip)
        if: ${{ matrix.archive == 'zip' }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $bin = "imir/target/${{ matrix.target }}/release/imir${{ matrix.extension }}"
          $archive = "imir-${{ matrix.target }}.${{ matrix.archive }}"
          Compress-Archive -Path $bin -DestinationPath $archive -Force

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: imir-${{ matrix.target }}.${{ matrix.archive }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
